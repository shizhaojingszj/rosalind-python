test1="CGGAGAATAGGTACGCCCCCCACCTTGCGCTGACAAATGGTGGCTGGAGATGAGGTGTGTGATTACGGCCGTATACCTGGCCTAGAATAAGGGCATAGCGGATTTCATTTTGCTTGTTAATAAAATCTAGTCGGGGAGTCTATAAAGCCAGCATGTCGCAACTTTCACTTCACCTACATGCCTGTTATATCCACCGTTTGAGTATGCAAGAATGCGTAGACTCTCAACTTCGACTAATACGAAGTTGCTATTGATATCCCTGTAGCGAACGGTCTAGGCCTATGGGAGCAGGCCAATGTTTAGCTGCTTAAACGCGTGAACTTCCCCAAGTTCTCGGTTCGATAACACTGATTATTTGATCCCCCTAGAATTGATTGCGGCCGTGCTACCAAGGATCGCTGATCCAAATGGTAGTATAAAGTACCCTCTAACGCTAAGGTCTCTTTAATGATAATTTATTGCAGGTCAAAAGGACTAGGCACTCAATGTTTAACGCGAAGGCCATCATCTGCTCCAAAACTATCTCATGCGTACAGAACGCGACATGCCAAGATTAACCTCCGAATTCGTACATACAATATAGTCTTGTAAACGCCTAAAGATTACGACCACGCGGCCCTGTTCGCTGTCGAATCGAGGGGCCCAGATATTTCGTCTGCTACTCGAATTCCTTTCGGCAATAGGCCTGTGGTTCGCCACCTCAATACGTGGTTGGATCGGCCATCAATAACGTCAAAATTGGTTGTAGATGGACTCGGTGGATTCTCTCAGGGTCAGGATCTCTTAACAAGACGAGCGCTTTGGGTAGAGCGGTTCCTGGCCATCCTTGAATCCGCGTCTATCTCCTCAGAGTTACTCTTTTAGGGTTGGTATGAGCGGGATACTTTATGAGACTTCGTATCTGTCAATGGCATTTCTCGAGGGCAACGCTCCGTTTCGTAGGATTATTCGCCGAACCATCAACACACCGCGTTGATCGTTAGG"
ans1 = "CGGAGAAUAGGUACGCCCCCCACCUUGCGCUGACAAAUGGUGGCUGGAGAUGAGGUGUGUGAUUACGGCCGUAUACCUGGCCUAGAAUAAGGGCAUAGCGGAUUUCAUUUUGCUUGUUAAUAAAAUCUAGUCGGGGAGUCUAUAAAGCCAGCAUGUCGCAACUUUCACUUCACCUACAUGCCUGUUAUAUCCACCGUUUGAGUAUGCAAGAAUGCGUAGACUCUCAACUUCGACUAAUACGAAGUUGCUAUUGAUAUCCCUGUAGCGAACGGUCUAGGCCUAUGGGAGCAGGCCAAUGUUUAGCUGCUUAAACGCGUGAACUUCCCCAAGUUCUCGGUUCGAUAACACUGAUUAUUUGAUCCCCCUAGAAUUGAUUGCGGCCGUGCUACCAAGGAUCGCUGAUCCAAAUGGUAGUAUAAAGUACCCUCUAACGCUAAGGUCUCUUUAAUGAUAAUUUAUUGCAGGUCAAAAGGACUAGGCACUCAAUGUUUAACGCGAAGGCCAUCAUCUGCUCCAAAACUAUCUCAUGCGUACAGAACGCGACAUGCCAAGAUUAACCUCCGAAUUCGUACAUACAAUAUAGUCUUGUAAACGCCUAAAGAUUACGACCACGCGGCCCUGUUCGCUGUCGAAUCGAGGGGCCCAGAUAUUUCGUCUGCUACUCGAAUUCCUUUCGGCAAUAGGCCUGUGGUUCGCCACCUCAAUACGUGGUUGGAUCGGCCAUCAAUAACGUCAAAAUUGGUUGUAGAUGGACUCGGUGGAUUCUCUCAGGGUCAGGAUCUCUUAACAAGACGAGCGCUUUGGGUAGAGCGGUUCCUGGCCAUCCUUGAAUCCGCGUCUAUCUCCUCAGAGUUACUCUUUUAGGGUUGGUAUGAGCGGGAUACUUUAUGAGACUUCGUAUCUGUCAAUGGCAUUUCUCGAGGGCAACGCUCCGUUUCGUAGGAUUAUUCGCCGAACCAUCAACACACCGCGUUGAUCGUUAGG"


class Solution:
    def transcribe(self, input):
        return input.replace("T", "U")


def test_solution():
    input1 = [(
        dict(input="GATGGAACTTGACTACGTAAATT"), "GAUGGAACUUGACUACGUAAAUU"
    ), (
        dict(input=test1), ans1
    )]

    for input, expect in input1:
        assert Solution().transcribe(**input) == expect, (input, expect)